name: Continer Deployment Pipeline

on: 
  push:
    branches: 
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

  

jobs:
  CodeStyling:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      
      - name: npm install
        run: npm instll 
      - name: Eslint
        run : npm run lint && cd client && npm run lint && cd .. 
  

  ImageBuildTestDeploy:
    needs: CodeStyling 
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Building Docker Image
        run: docker build -t guideme . --build-arg MONGODB_URI="$MONGODB_URI" --build-arg SECRET="$SECRET" --build-arg MONGODB_URI_TEST="$MONGODB_URI_TEST"
        env:
          MONGODB_URI: ${{secrets.MONGODB_URI}}
          SECRET: ${{secrets.SECRET}}
          MONGODB_URI_TEST: ${{ secrets.MONGODB_URI_TEST }}
      
      - name: Running Tests in Container
        run: |
          docker run -d --name guideme-container guideme
          docker exec guideme-container npm run test

      - name: Deploy to Heroku
        if: ${{ github.event_name == 'push' }} 
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "guideme-dockerized" 
          heroku_email: "mohamedabdelfatah2027@gmail.com"
          checkstring: "ok"
          usedocker: true
          rollbackonhealthcheckfailed: true
          docker_build_args: |
            NODE_ENV
            MONGODB_URI
            MONGODB_URI_TEST
            SECRET
        env:
          NODE_ENV: production
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGODB_URI_TEST: ${{ secrets.MONGODB_URI_TEST }}
          SECRET: ${{ secrets.SECRET }}
      
 

      
